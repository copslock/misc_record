package main

import (
  "bufio"
  "fmt"
  "os"
  "os/exec"
  "strings"
)

func main() {

  reader := bufio.NewReader(os.Stdin)
  fmt.Println("Simple Shell")
  fmt.Println("---------------------")
  
    for {
        fmt.Print("$ ")
        cmdString, err := reader.ReadString('\n')
        if err != nil {
            fmt.Fprintln(os.Stderr, err)
        }

        cmdString = strings.TrimSuffix(cmdString, "\n")

        cmd := exec.Command(cmdString)
        cmd.Stderr = os.Stderr
        cmd.Stdout = os.Stdout
        err = cmd.Run()
        if err != nil {
            fmt.Fprintln(os.Stderr, err)
        }

    }

}
 
 
 
 
 
 
//// Version 2

package main 

import (
	"bufio"
	"fmt"
	"os"
	"os/exec"
	"strings"
)
 
func main() {
	reader := bufio.NewReader(os.Stdin)
	for {
		fmt.Print( "$ " )
		cmdString, err := reader.ReadString( '\n' )
		if err != nil {
			fmt.Fprintln(os.Stderr, err)
		}
		err = runCommand(cmdString)
		if err != nil {
			fmt.Fprintln(os.Stderr, err)
		}
	}
}
func runCommand(commandStr string) error {
	commandStr = strings.TrimSuffix(commandStr, "\n" )
	arrCommandStr := strings.Fields(commandStr)
	switch arrCommandStr[ 0 ] {
	case "exit" :
		os.Exit( 0 )
		// add another case here for custom commands.
	}
	cmd := exec.Command(arrCommandStr[ 0 ], arrCommandStr[ 1 :]...)
	cmd.Stderr = os.Stderr
	cmd.Stdout = os.Stdout
	return cmd.Run()
}
  
